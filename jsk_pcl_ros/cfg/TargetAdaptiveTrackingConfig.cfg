#!/usr/bin/env python

# set up parameters that we care about
PACKAGE = 'jsk_pcl_ros'

try:
    import imp
    imp.find_module(PACKAGE)
    from dynamic_reconfigure.parameter_generator_catkin import *;
except:
    import roslib; roslib.load_manifest(PACKAGE)
    from dynamic_reconfigure.parameter_generator import *;

from math import pi

gen = ParameterGenerator ()

gen.add("color_importance", double_t, 0, "color importance", 0.2, 0.0, 5.0)
gen.add("spatial_importance", double_t, 0, "spatial importance", 0.4, 0.0, 5.0)
gen.add("normal_importance", double_t, 0, "normal importance", 1.0, 0.0, 5.0)
gen.add("use_transform", bool_t, 0, "use transform", True)
gen.add("seed_resolution", double_t, 0, "seed resolution", 0.1, 0.0, 10.0)
gen.add("voxel_resolution", double_t, 0, "voxel resolution", 0.008, 0.0, 1.0)

gen.add("min_cluster_size", int_t, 0, "min supervoxel size", 20, 10, 1000)
gen.add("threshold", double_t, 0, "probability threshold", 0.4, 0.0, 1.0)
gen.add("bin_size", int_t, 0, "local structural rpy bin", 18, 4, 180)
gen.add("eps_distance", double_t, 0, "max distance between clusters", 0.03, 0.0, 0.5)
gen.add("eps_min_samples", int_t, 0, "min samples for consideration", 3, 3, 20)
gen.add("update_tracker_reference", bool_t, 0, "update tracking model", False)
gen.add("vfh_scaling", double_t, 0, "likelihood scaling factor for vfh matching", 0.70, 0.0, 1.0)
gen.add("color_scaling", double_t, 0, "likelihood scaling factor for color matching", 0.50, 0.0, 1.0)
gen.add("structure_scaling", double_t, 0, "likelihood scaling factor for local voxel adjacency info", 0.0, 0.0, 1.0)
gen.add("update_filter_template", bool_t, 0, "updating the particle filter tracking template", False)
gen.add("history_window_size", int_t, 0, "Frame after which the un-matched voxel is discarded", 5, 1, 50)

exit (gen.generate (PACKAGE, "jsk_pcl_ros", "TargetAdaptiveTracking"))
