#!/usr/bin/env python
PACKAGE='cr_capture'
import roslib; roslib.load_manifest(PACKAGE)

from math import pi
from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

#gen.add("max_range", double_t, SensorLevels.RECONFIGURE_RUNNING,
#        "max_range corresponding to max sensor output",   5.0, 0.0, 20.0)

gen.add("clear_uncolored", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "clear(move to zero) filed to get color",  True)
gen.add("short_range", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "use calibration result in short range (less than 1m)",  False)

gen.add("use_filter", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "use distance edge filter", True)
gen.add("canny_parameter1", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "size for using smooth filter",  40.0, 0.0, 400.0)
gen.add("canny_parameter2", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "size for using smooth filter",  80.0, 0.0, 400.0)
gen.add("dilate_times", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "size for using smooth filter",  1, 0, 5)

gen.add("use_smooth", bool_t, SensorLevels.RECONFIGURE_RUNNING,
        "use depth image smooth filter(bilateral filter)",  True)
gen.add("smooth_size", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "size for using smooth filter in pixel", 6, -1, 24)
gen.add("smooth_depth", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "depth for using smooth filter", 0.04, 0.0, 0.5)
gen.add("smooth_space", double_t, SensorLevels.RECONFIGURE_RUNNING,
        "radius for using smooth filte",  6.0, 0.0, 24.0)

gen.add("intensity_threshold", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "intensity threshold", 1, 0, 255)
gen.add("confidence_threshold", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "confidence threshold", 200, 0, 255)

exit(gen.generate(PACKAGE, "cr_capture", "CRCapture"))
