<launch>
  <arg name="POINTCLOUD_INPUT" default="/camera_remote/depth_registered/points"/>
  <arg name="IMAGE_TOPIC"
       default="/camera_remote_uncalibrated/rgb/image_rect_color" />
  <arg name="DEPTH_IMAGE" default="/camera_remote_uncalibrated/depth_registered/hw_registered/image_rect_raw" />
  <arg name="CAMERA_INFO_TOPIC" default="/camera/rgb/camera_info" />
  <arg name="CLIP_SIZE" default="0.2" />
  compute the pose of the checker board from RGB image.
  <group ns="checkerdetector" clear_params="true">
    <param name="display" type="int" value="1"/>
    <!--param name="frame_id" type="string" value="stereo_link"/-->
    <param name="rect0_size_x" type="double" value="0.03"/>
    <param name="rect0_size_y" type="double" value="0.03"/>
    <param name="grid0_size_x" type="int" value="5"/>
    <param name="grid0_size_y" type="int" value="4"/>
    <param name="type0" type="string" value="data/ricebox.kinbody.xml"/>
    
    publish the pose of the checker board to ObjectDetection with
    the message type of ObjectDetection
    <node pkg="checkerboard_detector" name="checkerboard_detector"
          type="checkerboard_detector" respawn="false"
          output="log">
      <remap from="image" to="$(arg IMAGE_TOPIC)" />
      <remap from="camera_info" to="$(arg CAMERA_INFO_TOPIC)" />
    </node>
    
    conevrt ObjectDetection to tf frame.
    <node pkg="checkerboard_detector" name="objectdetection_to_tf"
          type="objectdetection_tf_publisher.py">
      <param name="frame_id" value="checkerboard" />
    </node>
  </group>

  PointCloud Processing.
  <node pkg="jsk_pcl_ros" type="depth_image_error"
        name="depth_image_error"
        output="screen">
    <remap from="~image" to="$(arg DEPTH_IMAGE)" />
    <remap from="~point" to="/checkerdetector/corner_point" />
    <remap from="~camera_info" to="$(arg CAMERA_INFO_TOPIC)" />
  </node>

</launch>
