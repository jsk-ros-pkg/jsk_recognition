#!/usr/bin/env python

# set up parameters that we care about
PACKAGE = 'jsk_pcl_ros'

try:
    import imp
    imp.find_module(PACKAGE)
    from dynamic_reconfigure.parameter_generator_catkin import *;
except:
    import roslib; roslib.load_manifest(PACKAGE)
    from dynamic_reconfigure.parameter_generator import *;

from math import pi

gen = ParameterGenerator ()

gen.add("max_particle_num", int_t, 0, "The maximum number of the particles", 1000, 1, 100000)
gen.add("iteration_num", int_t, 0, "number of iteratoin", 1, 1, 1000)
gen.add("resample_likelihood_thr", double_t, 0, "threshold to resample particles", 0, 0, 1.0)
gen.add("delta", double_t, 0, "delta for KLD sampling", 0.99, 0.0, 1.0)
gen.add("epsilon", double_t, 0, "epsilon for KLD sampling", 0.2, 0.0, 1.0)
# bin_size
gen.add("bin_size_x", double_t, 0, "x size of bin for KLD sampling", 0.01, 0.0, 1.0)
gen.add("bin_size_y", double_t, 0, "y size of bin for KLD sampling", 0.01, 0.0, 1.0)
gen.add("bin_size_z", double_t, 0, "z size of bin for KLD sampling", 0.01, 0.0, 1.0)
gen.add("bin_size_roll", double_t, 0, "roll size of bin for KLD sampling", 0.01, 0.0, 1.0)
gen.add("bin_size_pitch", double_t, 0, "pitch size of bin for KLD sampling", 0.01, 0.0, 1.0)
gen.add("bin_size_yaw", double_t, 0, "yaw size of bin for KLD sampling", 0.01, 0.0, 1.0)
gen.add("default_step_covariance_x", double_t, 0, "x of step covariance",
        0.0001, 0.0, 1.0)
gen.add("default_step_covariance_y", double_t, 0, "y of step covariance",
        0.0001, 0.0, 1.0)
gen.add("default_step_covariance_z", double_t, 0, "z of step covariance",
        0.0001, 0.0, 1.0)
gen.add("default_step_covariance_roll", double_t, 0, "roll of step covariance",
        0.004, 0.0, 1.0)
gen.add("default_step_covariance_pitch", double_t, 0, "pitch of step covariance",
        0.004, 0.0, 1.0)
gen.add("default_step_covariance_yaw", double_t, 0, "yaw of step covariance",
        0.004, 0.0, 1.0)

exit (gen.generate (PACKAGE, "jsk_pcl_ros", "ParticleFilterTracking"))
