<launch>

  <include file="$(find jsk_pcl_ros_utils)/sample/include/play_rosbag_shelf_bin.xml" />

  <arg name="INPUT_CLOUD" value="/right_hand_camera/depth_registered/points" />
  <arg name="FILTERED_CLOUD" value="/voxelgrid/output" />
  <arg name="EMPTY_CLOUD" value="/empty_filter/output" />
  <arg name="MODEL_FILE" value="$(find jsk_pcl_ros)/sample/data/drill.pcd" />

  <arg name="voxel_grid_filter_limit_min" default="0.0"/>
  <arg name="voxel_grid_filter_limit_max" default="3.0"/>
  <arg name="voxel_grid_filter_field_name" default="z"/>
  <arg name="voxel_grid_leaf_size" default="0.04"/>

  <arg name="MANAGER" value="people_detection_manager" />
  <node name="$(arg MANAGER)"
        pkg="nodelet" type="nodelet"
        args="manager"/>

  <node name="model_publisher"
        pkg="pcl_ros" type="pcd_to_pointcloud"
        args="$(arg MODEL_FILE) 0.1"
        output="screen"
        >
    <remap from="cloud_pcd" to="reference_cloud" />
    <rosparam>
      _frame_id: /camera_link
    </rosparam>
  </node>

  <node name="voxelgrid"
        pkg="nodelet" type="nodelet"
        args="load pcl/VoxelGrid $(arg MANAGER)"
        output="screen" clear_params="true">
    <remap from="~input" to="$(arg INPUT_CLOUD)" />
    <param name="filter_limit_min" value="$(arg voxel_grid_filter_limit_min)" />
    <param name="filter_limit_max" value="$(arg voxel_grid_filter_limit_max)" />
    <param name="filter_limit_field_name" value="$(arg voxel_grid_filter_field_name)" />
    <param name="leaf_size" value="$(arg voxel_grid_leaf_size)" />
  </node>

  <node name="empty_filter"
        pkg="nodelet" type="nodelet"
        args="load pcl/PassThrough $(arg MANAGER)"
        output="screen" clear_params="true">
    <remap from="~input" to="$(arg INPUT_CLOUD)" />
    <param name="filter_limit_min" value="0.0" />
    <param name="filter_limit_max" value="0.0" />
  </node>

  <node name="icp_registration"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ICPRegistration /$(arg MANAGER)"
        output="screen">
    <remap from="~input" to="$(arg FILTERED_CLOUD)" />
    <remap from="~input_reference" to="/reference_cloud" />
  </node>

  <node name="empty_cloud_icp_registration"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ICPRegistration /$(arg MANAGER)"
        output="screen">
    <remap from="~input" to="$(arg EMPTY_CLOUD)" />
    <remap from="~input_reference" to="/reference_cloud" />
  </node>

  <test test-name="test_icp_registration"
        name="test_icp_registration"
        pkg="jsk_tools" type="test_topic_published.py"
        time-limit="360" retry="3">
    <rosparam>
      topic_0: /icp_registration/output
      timeout_0: 30
      <!-- topic1: /icp_registration/debug/flipped -->
      <!-- timeout_1: 30 -->
      topic2: /icp_registration/debug/result
      timeout_2: 30
      topic3: /icp_registration/debug/source
      timeout_3: 30
      topic_4: /icp_registration/debug/target
      timeout_4: 30
      topic_5: /icp_registration/icp_result
      timeout_5: 30
      topic_7: /icp_registration/output/average_time
      timeout_7: 30
      topic_8: /icp_registration/output/latest_time
      timeout_8: 30
      topic_9: /icp_registration/output_pose
      timeout_9: 30
      topic_10: /empty_cloud_icp_registration/output
      timeout_10: 30
      <!-- topic11: /empty_cloud_icp_registration/debug/flipped -->
      <!-- timeout_11: 30 -->
      topic12: /empty_cloud_icp_registration/debug/result
      timeout_13: 30
      topic14: /empty_cloud_icp_registration/debug/source
      timeout_14: 30
      topic_15: /empty_cloud_icp_registration/debug/target
      timeout_15: 30
      topic_16: /empty_cloud_icp_registration/icp_result
      timeout_16: 30
      topic_18: /empty_cloud_icp_registration/output/average_time
      timeout_18: 30
      topic_19: /empty_cloud_icp_registration/output/latest_time
      timeout_19: 30
      topic_20: /empty_cloud_icp_registration/output_pose
      timeout_20: 30
    </rosparam>
  </test>

</launch>
