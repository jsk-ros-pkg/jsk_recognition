<launch>
  <!-- Your microphone parameters -->
  <!-- Please overwrite these values at the first time -->
  <arg name="device" default="hw:0,0" />
  <arg name="n_channel" default="2" />
  <arg name="bitdepth" default="16" />
  <arg name="mic_sampling_rate" default="44100" />

  <arg name="use_rosbag" default="false" />
  <arg name="filename" default="/" />
  <arg name="use_microphone" default="true" />

  <arg name="high_cut_freq" default="8000" />
  <arg name="low_cut_freq" default="1" />
  <arg name="spectrogram_period" default="1" />

  <arg name="gui" default="false" />

  <arg name="pause_rosbag" default="true" />
  <arg name="rosbag_args" value="--clock --pause" if="$(arg pause_rosbag)" />
  <arg name="rosbag_args" value="--clock" unless="$(arg pause_rosbag)" />

  <!-- Start: Data conversion -->
  <!-- audio -> spectrum -> mono spectrogram -> preprocessed mono spectrogram -->

  <!-- Publish audio -->
  <group if="$(arg use_rosbag)" >
    <param name="use_sim_time" value="true" />
    <node name="rosbag_play"
          pkg="rosbag" type="play"
          args="$(arg filename) $(arg rosbag_args)"
          output="screen" />
  </group>
  <group unless="$(arg use_rosbag)" >
    <node name="audio_capture" pkg="audio_capture" type="audio_capture"
          if="$(arg use_microphone)" respawn="true">
      <rosparam subst_value="true">
        format: wave
        device: $(arg device)
        channels: $(arg n_channel)
        depth: $(arg bitdepth)
        sample_rate: $(arg mic_sampling_rate)
      </rosparam>
    </node>
  </group>

  <!-- audio -> spectrum -> mono spectrogram -->
  <include file="$(find audio_to_spectrogram)/launch/audio_to_spectrogram.launch">
    <arg name="launch_audio_capture" value="false" />
    <arg name="bitdepth" value="$(arg bitdepth)" />
    <arg name="mic_sampling_rate" value="$(arg mic_sampling_rate)" />
    <arg name="n_channel" value="$(arg n_channel)" />
    <arg name="high_cut_freq" value="$(arg high_cut_freq)" />
    <arg name="low_cut_freq" value="$(arg low_cut_freq)" />
    <arg name="spectrogram_period" value="$(arg spectrogram_period)" />
    <arg name="gui" value="false" />
  </include>

  <!-- mono spectrogram -> preprocessed mono spectrogram -->
  <!-- Spectral subtraction by spectral subtraction method -->
  <node pkg="sound_classification" type="preprocess_gray_image.py" name="preprocess_gray_image" >
    <remap from="~input" to="/spectrum_to_spectrogram/spectrogram" />
  </node>

  <!-- End: Data conversion -->
  <!-- audio -> spectrum -> mono spectrogram -> preprocessed mono spectrogram -->

  <group if="$(arg gui)">
    <!-- visualize spectrum -->
    <!-- Note that this is spectrum before noise subtraction -->
    <!-- <node pkg="audio_to_spectrogram" type="spectrum_plot.py" name="spectrum_plot"  > -->
    <!--   <remap from="~spectrum" to="/audio_to_spectrum/spectrum_filtered" /> -->
    <!-- </node> -->

    <!-- visualize spectrogram -->
    <node pkg="image_view" type="image_view" name="spectrogram_view"  >
      <remap from="image" to="/preprocess_gray_image/output_normalized" />
      <rosparam>
        <!-- set all pixels between 0 and 255 -->
        do_dynamic_scaling: true
        <!-- use jet colormap -->
        colormap: 2
      </rosparam>
    </node>
  </group>

</launch>
